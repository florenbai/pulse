// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.2
// source: prometheus.proto

package prometheus

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
}

func (x *AlertGroupRequest) Reset() {
	*x = AlertGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prometheus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertGroupRequest) ProtoMessage() {}

func (x *AlertGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prometheus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertGroupRequest.ProtoReflect.Descriptor instead.
func (*AlertGroupRequest) Descriptor() ([]byte, []int) {
	return file_prometheus_proto_rawDescGZIP(), []int{0}
}

func (x *AlertGroupRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type AlertRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert       string            `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	Expr        string            `protobuf:"bytes,2,opt,name=expr,proto3" json:"expr,omitempty"`
	For         string            `protobuf:"bytes,3,opt,name=for,proto3" json:"for,omitempty"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Filename    string            `protobuf:"bytes,6,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *AlertRule) Reset() {
	*x = AlertRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prometheus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRule) ProtoMessage() {}

func (x *AlertRule) ProtoReflect() protoreflect.Message {
	mi := &file_prometheus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRule.ProtoReflect.Descriptor instead.
func (*AlertRule) Descriptor() ([]byte, []int) {
	return file_prometheus_proto_rawDescGZIP(), []int{1}
}

func (x *AlertRule) GetAlert() string {
	if x != nil {
		return x.Alert
	}
	return ""
}

func (x *AlertRule) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *AlertRule) GetFor() string {
	if x != nil {
		return x.For
	}
	return ""
}

func (x *AlertRule) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AlertRule) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *AlertRule) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type AlertRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules     []*AlertRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	Filename  string       `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	GroupName string       `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *AlertRules) Reset() {
	*x = AlertRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prometheus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRules) ProtoMessage() {}

func (x *AlertRules) ProtoReflect() protoreflect.Message {
	mi := &file_prometheus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRules.ProtoReflect.Descriptor instead.
func (*AlertRules) Descriptor() ([]byte, []int) {
	return file_prometheus_proto_rawDescGZIP(), []int{2}
}

func (x *AlertRules) GetRules() []*AlertRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *AlertRules) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AlertRules) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type AlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertRule *AlertRule `protobuf:"bytes,1,opt,name=alertRule,proto3" json:"alertRule,omitempty"`
	Filename  string     `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *AlertRuleRequest) Reset() {
	*x = AlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prometheus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRuleRequest) ProtoMessage() {}

func (x *AlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prometheus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRuleRequest.ProtoReflect.Descriptor instead.
func (*AlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_prometheus_proto_rawDescGZIP(), []int{3}
}

func (x *AlertRuleRequest) GetAlertRule() *AlertRule {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

func (x *AlertRuleRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type UpdateAlertRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename        string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	GroupName       string     `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
	UpdateAlertName string     `protobuf:"bytes,3,opt,name=updateAlertName,proto3" json:"updateAlertName,omitempty"`
	AlertRule       *AlertRule `protobuf:"bytes,4,opt,name=alertRule,proto3" json:"alertRule,omitempty"`
}

func (x *UpdateAlertRuleRequest) Reset() {
	*x = UpdateAlertRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prometheus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRuleRequest) ProtoMessage() {}

func (x *UpdateAlertRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prometheus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRuleRequest) Descriptor() ([]byte, []int) {
	return file_prometheus_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAlertRuleRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UpdateAlertRuleRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdateAlertRuleRequest) GetUpdateAlertName() string {
	if x != nil {
		return x.UpdateAlertName
	}
	return ""
}

func (x *UpdateAlertRuleRequest) GetAlertRule() *AlertRule {
	if x != nil {
		return x.AlertRule
	}
	return nil
}

var File_prometheus_proto protoreflect.FileDescriptor

var file_prometheus_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x11, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x02, 0x0a,
	0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x78, 0x70, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x66, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x48, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x73, 0x0a, 0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x2b, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x10, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x32, 0xca, 0x03, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x1c, 0x5a,
	0x1a, 0x6d, 0x69, 0x6e, 0x6f, 0x73, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_prometheus_proto_rawDescOnce sync.Once
	file_prometheus_proto_rawDescData = file_prometheus_proto_rawDesc
)

func file_prometheus_proto_rawDescGZIP() []byte {
	file_prometheus_proto_rawDescOnce.Do(func() {
		file_prometheus_proto_rawDescData = protoimpl.X.CompressGZIP(file_prometheus_proto_rawDescData)
	})
	return file_prometheus_proto_rawDescData
}

var file_prometheus_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_prometheus_proto_goTypes = []interface{}{
	(*AlertGroupRequest)(nil),      // 0: prometheus.AlertGroupRequest
	(*AlertRule)(nil),              // 1: prometheus.AlertRule
	(*AlertRules)(nil),             // 2: prometheus.AlertRules
	(*AlertRuleRequest)(nil),       // 3: prometheus.AlertRuleRequest
	(*UpdateAlertRuleRequest)(nil), // 4: prometheus.UpdateAlertRuleRequest
	nil,                            // 5: prometheus.AlertRule.LabelsEntry
	nil,                            // 6: prometheus.AlertRule.AnnotationsEntry
	(*emptypb.Empty)(nil),          // 7: google.protobuf.Empty
}
var file_prometheus_proto_depIdxs = []int32{
	5,  // 0: prometheus.AlertRule.labels:type_name -> prometheus.AlertRule.LabelsEntry
	6,  // 1: prometheus.AlertRule.annotations:type_name -> prometheus.AlertRule.AnnotationsEntry
	1,  // 2: prometheus.AlertRules.rules:type_name -> prometheus.AlertRule
	1,  // 3: prometheus.AlertRuleRequest.alertRule:type_name -> prometheus.AlertRule
	1,  // 4: prometheus.UpdateAlertRuleRequest.alertRule:type_name -> prometheus.AlertRule
	0,  // 5: prometheus.PrometheusAgentService.CreateAlertGroup:input_type -> prometheus.AlertGroupRequest
	0,  // 6: prometheus.PrometheusAgentService.DeleteAlertGroup:input_type -> prometheus.AlertGroupRequest
	2,  // 7: prometheus.PrometheusAgentService.CreateAlertRules:input_type -> prometheus.AlertRules
	4,  // 8: prometheus.PrometheusAgentService.UpdateAlertRule:input_type -> prometheus.UpdateAlertRuleRequest
	2,  // 9: prometheus.PrometheusAgentService.DeleteAlertRule:input_type -> prometheus.AlertRules
	7,  // 10: prometheus.PrometheusAgentService.Reload:input_type -> google.protobuf.Empty
	7,  // 11: prometheus.PrometheusAgentService.CreateAlertGroup:output_type -> google.protobuf.Empty
	7,  // 12: prometheus.PrometheusAgentService.DeleteAlertGroup:output_type -> google.protobuf.Empty
	7,  // 13: prometheus.PrometheusAgentService.CreateAlertRules:output_type -> google.protobuf.Empty
	7,  // 14: prometheus.PrometheusAgentService.UpdateAlertRule:output_type -> google.protobuf.Empty
	7,  // 15: prometheus.PrometheusAgentService.DeleteAlertRule:output_type -> google.protobuf.Empty
	7,  // 16: prometheus.PrometheusAgentService.Reload:output_type -> google.protobuf.Empty
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_prometheus_proto_init() }
func file_prometheus_proto_init() {
	if File_prometheus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prometheus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prometheus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prometheus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prometheus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prometheus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prometheus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prometheus_proto_goTypes,
		DependencyIndexes: file_prometheus_proto_depIdxs,
		MessageInfos:      file_prometheus_proto_msgTypes,
	}.Build()
	File_prometheus_proto = out.File
	file_prometheus_proto_rawDesc = nil
	file_prometheus_proto_goTypes = nil
	file_prometheus_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.0. DO NOT EDIT.

type PrometheusAgentService interface {
	CreateAlertGroup(ctx context.Context, req *AlertGroupRequest) (res *emptypb.Empty, err error)
	DeleteAlertGroup(ctx context.Context, req *AlertGroupRequest) (res *emptypb.Empty, err error)
	CreateAlertRules(ctx context.Context, req *AlertRules) (res *emptypb.Empty, err error)
	UpdateAlertRule(ctx context.Context, req *UpdateAlertRuleRequest) (res *emptypb.Empty, err error)
	DeleteAlertRule(ctx context.Context, req *AlertRules) (res *emptypb.Empty, err error)
	Reload(ctx context.Context, req *emptypb.Empty) (res *emptypb.Empty, err error)
}
